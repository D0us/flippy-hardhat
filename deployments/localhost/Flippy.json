{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minimumWager",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Flippy_PlayerAlreadyInGame",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Flippy__InsufficientContractFunds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Flippy__InsufficientFundsToSatisfyWithdrawal",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Flippy__InsufficientWager",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Flippy__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Flippy__TransferFailed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "wager",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum Flippy.CoinFace",
          "name": "faceSelected",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "enum Flippy.CoinFace",
          "name": "faceFlipped",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "prize",
          "type": "uint256"
        }
      ],
      "name": "CoinFlipped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "fromAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Funded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrew",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "enum Flippy.CoinFace",
          "name": "playerCoinFaceSelection",
          "type": "uint8"
        }
      ],
      "name": "flipCoin",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFlipResult",
      "outputs": [
        {
          "internalType": "enum Flippy.CoinFace",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMinimumWager",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "playerAddress",
          "type": "address"
        }
      ],
      "name": "isAddressInBalances",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x3cbddfe78388da842700e5df172bdb7a3f30661e8e908e394f38deac142505dd",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "753645",
    "logsBloom": "0x
    "blockHash": "0x5e7a3efed17605a43c7dfeb15ecf081feef2fa9adb4894a0758cb8bd259ef0c5",
    "transactionHash": "0x3cbddfe78388da842700e5df172bdb7a3f30661e8e908e394f38deac142505dd",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "753645",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "100000000000000000",
    0
  ],
  "numDeployments": 1,
  "solcInputHash": "11c9ad8726cddea4739c2135170e0ec5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minimumWager\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Flippy_PlayerAlreadyInGame\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Flippy__InsufficientContractFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Flippy__InsufficientFundsToSatisfyWithdrawal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Flippy__InsufficientWager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Flippy__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Flippy__TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wager\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Flippy.CoinFace\",\"name\":\"faceSelected\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum Flippy.CoinFace\",\"name\":\"faceFlipped\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prize\",\"type\":\"uint256\"}],\"name\":\"CoinFlipped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Funded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrew\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"enum Flippy.CoinFace\",\"name\":\"playerCoinFaceSelection\",\"type\":\"uint8\"}],\"name\":\"flipCoin\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFlipResult\",\"outputs\":[{\"internalType\":\"enum Flippy.CoinFace\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinimumWager\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"playerAddress\",\"type\":\"address\"}],\"name\":\"isAddressInBalances\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isAddressInBalances(address)\":{\"details\":\"Check whether a player currently exists in the list of active balances\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Flippy.sol\":\"Flippy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Flippy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nerror Flippy__InsufficientWager();\\nerror Flippy__InsufficientContractFunds();\\nerror Flippy_PlayerAlreadyInGame();\\nerror Flippy__TransferFailed();\\nerror Flippy__NotOwner();\\nerror Flippy__InsufficientFundsToSatisfyWithdrawal();\\n\\ncontract Flippy {\\n    enum CoinFace {\\n        HEADS,\\n        TAILS\\n    } // uint256 0 = HEADS, 1 = TAILS\\n\\n    /* state vars */\\n    uint256 private immutable i_minimumBalance;\\n    address private immutable i_owner;\\n    // uint256 private immutable i_fee;\\n\\n    /* Use maps as we plan on letting players verse eachother later on */\\n    mapping(address => uint256) private s_playersToBalances;\\n    mapping(address => CoinFace) private s_playersToCoinFaceSelection;\\n\\n    event CoinFlipped(address indexed player, uint256 wager, CoinFace faceSelected, CoinFace faceFlipped, uint256 prize);\\n    event Funded(address fromAddress, uint256 amount);\\n    event Withdrew(uint256 amount);\\n\\n    constructor(\\n        address owner,\\n        uint256 minimumWager,\\n        uint256 /* fee */\\n    ) {\\n        i_owner = owner;\\n        i_minimumBalance = minimumWager;\\n        // i_fee = fee;\\n    }\\n\\n    /**\\n     */\\n    function flipCoin(CoinFace playerCoinFaceSelection) public payable {\\n        if ((msg.value * 2) > address(this).balance) {\\n            revert Flippy__InsufficientContractFunds();\\n        }\\n        if (msg.value < i_minimumBalance) {\\n            revert Flippy__InsufficientWager();\\n        }\\n        if (isAddressInBalances(msg.sender)) {\\n            revert Flippy_PlayerAlreadyInGame();\\n        }\\n\\n        address playerAddress = payable(msg.sender);\\n        uint256 wager = msg.value;\\n        s_playersToCoinFaceSelection[playerAddress] = playerCoinFaceSelection;\\n        s_playersToBalances[playerAddress] = wager;\\n\\n        CoinFace result = getFlipResult();\\n        if (result == playerCoinFaceSelection) {\\n            uint256 prize = (wager * 2);\\n            (bool success, ) = playerAddress.call{value: prize}(\\\"\\\");\\n            if (!success) {\\n                //TODO: If it fails here we gobble up the funds as there is no way to reinitiate the flip\\n                // Maybe split into into two functins - enter game and flip coin\\n                revert Flippy__TransferFailed();\\n            }\\n            emit CoinFlipped(playerAddress, wager, playerCoinFaceSelection, result, prize);\\n        } else {\\n            emit CoinFlipped(playerAddress, wager, playerCoinFaceSelection, result, 0);\\n        }\\n        delete s_playersToBalances[playerAddress];\\n        delete s_playersToCoinFaceSelection[playerAddress];\\n    }\\n\\n    function getFlipResult() public pure returns (CoinFace) {\\n        return CoinFace.HEADS;\\n    }\\n\\n    /**\\n     * @dev Check whether a player currently exists in the list of active balances\\n     *\\n     */\\n    function isAddressInBalances(address playerAddress) public view returns (bool) {\\n        if (s_playersToBalances[playerAddress] > 0) {\\n            return true;\\n        }\\n        return false;\\n    }\\n\\n    function getMinimumWager() public view returns (uint256) {\\n        return i_minimumBalance;\\n    }\\n\\n    function fund() public payable {\\n        emit Funded(msg.sender, msg.value);\\n    }\\n\\n    function withdrawAll() public payable onlyOwner {\\n        uint256 amount = address(this).balance;\\n        (bool success, ) = msg.sender.call{value: amount}(\\\"\\\");\\n        emit Withdrew(amount);\\n    }\\n\\n    function withdraw(uint256 amount) public payable onlyOwner {\\n        if (amount > address(this).balance) {\\n            revert Flippy__InsufficientFundsToSatisfyWithdrawal();\\n        }\\n        (bool success, ) = msg.sender.call{value: amount}(\\\"\\\");\\n        emit Withdrew(amount);\\n    }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert Flippy__NotOwner();\\n        }\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xbfa4fad250fa7f32dbb08378139d6ddb020090d5d34c6e6c8c7b4468131fc013\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b5060405162000e5138038062000e51833981810160405281019062000037919062000121565b8273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505081608081815250505050506200017d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000ae8262000081565b9050919050565b620000c081620000a1565b8114620000cc57600080fd5b50565b600081519050620000e081620000b5565b92915050565b6000819050919050565b620000fb81620000e6565b81146200010757600080fd5b50565b6000815190506200011b81620000f0565b92915050565b6000806000606084860312156200013d576200013c6200007c565b5b60006200014d86828701620000cf565b935050602062000160868287016200010a565b925050604062000173868287016200010a565b9150509250925092565b60805160a051610ca0620001b160003960008181610156015261068801526000818161030701526108510152610ca06000f3fe6080604052600436106100705760003560e01c8063853828b61161004e578063853828b6146100d8578063b60d4288146100e2578063e07c73e7146100ec578063f48409e91461012957610070565b80632e1a7d4d1461007557806350fa12c7146100915780636afa82ea146100bc575b600080fd5b61008f600480360381019061008a91906108b0565b610154565b005b34801561009d57600080fd5b506100a66102ba565b6040516100b39190610954565b60405180910390f35b6100d660048036038101906100d19190610994565b6102bf565b005b6100e0610686565b005b6100ea6107b7565b005b3480156100f857600080fd5b50610113600480360381019061010e9190610a1f565b6107f2565b6040516101209190610a67565b60405180910390f35b34801561013557600080fd5b5061013e61084d565b60405161014b9190610a91565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101d9576040517f77cd32d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115610213576040517f0b407c6f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff168260405161023990610add565b60006040518083038185875af1925050503d8060008114610276576040519150601f19603f3d011682016040523d82523d6000602084013e61027b565b606091505b505090507fb6b476da71cea8275cac6b1720c04966afaff5e637472cedb6cbd32c43a23251826040516102ae9190610a91565b60405180910390a15050565b600090565b476002346102cd9190610b21565b1115610305576040517fa01e60eb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000034101561035f576040517fb315dd1700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610368336107f2565b1561039f576040517fab07e46400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339050600034905082600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083600181111561040b5761040a6108dd565b5b0217905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600061045d6102ba565b9050836001811115610472576104716108dd565b5b816001811115610485576104846108dd565b5b036105995760006002836104999190610b21565b905060008473ffffffffffffffffffffffffffffffffffffffff16826040516104c190610add565b60006040518083038185875af1925050503d80600081146104fe576040519150601f19603f3d011682016040523d82523d6000602084013e610503565b606091505b505090508061053e576040517fd7d1d7df00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff167f1070a358267b3c26271e1f9b8e8c4d095432b7e032a37c4b59f45685c7e36b8e8588868660405161058a9493929190610b63565b60405180910390a250506105ef565b8273ffffffffffffffffffffffffffffffffffffffff167f1070a358267b3c26271e1f9b8e8c4d095432b7e032a37c4b59f45685c7e36b8e83868460006040516105e69493929190610bed565b60405180910390a25b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905550505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461070b576040517f77cd32d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600047905060003373ffffffffffffffffffffffffffffffffffffffff168260405161073690610add565b60006040518083038185875af1925050503d8060008114610773576040519150601f19603f3d011682016040523d82523d6000602084013e610778565b606091505b505090507fb6b476da71cea8275cac6b1720c04966afaff5e637472cedb6cbd32c43a23251826040516107ab9190610a91565b60405180910390a15050565b7f5af8184bef8e4b45eb9f6ed7734d04da38ced226495548f46e0c8ff8d7d9a52433346040516107e8929190610c41565b60405180910390a1565b6000806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411156108435760019050610848565b600090505b919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600080fd5b6000819050919050565b61088d8161087a565b811461089857600080fd5b50565b6000813590506108aa81610884565b92915050565b6000602082840312156108c6576108c5610875565b5b60006108d48482850161089b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061091d5761091c6108dd565b5b50565b600081905061092e8261090c565b919050565b600061093e82610920565b9050919050565b61094e81610933565b82525050565b60006020820190506109696000830184610945565b92915050565b6002811061097c57600080fd5b50565b60008135905061098e8161096f565b92915050565b6000602082840312156109aa576109a9610875565b5b60006109b88482850161097f565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109ec826109c1565b9050919050565b6109fc816109e1565b8114610a0757600080fd5b50565b600081359050610a19816109f3565b92915050565b600060208284031215610a3557610a34610875565b5b6000610a4384828501610a0a565b91505092915050565b60008115159050919050565b610a6181610a4c565b82525050565b6000602082019050610a7c6000830184610a58565b92915050565b610a8b8161087a565b82525050565b6000602082019050610aa66000830184610a82565b92915050565b600081905092915050565b50565b6000610ac7600083610aac565b9150610ad282610ab7565b600082019050919050565b6000610ae882610aba565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b2c8261087a565b9150610b378361087a565b9250828202610b458161087a565b91508282048414831517610b5c57610b5b610af2565b5b5092915050565b6000608082019050610b786000830187610a82565b610b856020830186610945565b610b926040830185610945565b610b9f6060830184610a82565b95945050505050565b6000819050919050565b6000819050919050565b6000610bd7610bd2610bcd84610ba8565b610bb2565b61087a565b9050919050565b610be781610bbc565b82525050565b6000608082019050610c026000830187610a82565b610c0f6020830186610945565b610c1c6040830185610945565b610c296060830184610bde565b95945050505050565b610c3b816109e1565b82525050565b6000604082019050610c566000830185610c32565b610c636020830184610a82565b939250505056fea26469706673582212202c55fb9304bd13d3411260bfe220c8da4aff2070aa5a572f740ce4eccd0401ce64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063853828b61161004e578063853828b6146100d8578063b60d4288146100e2578063e07c73e7146100ec578063f48409e91461012957610070565b80632e1a7d4d1461007557806350fa12c7146100915780636afa82ea146100bc575b600080fd5b61008f600480360381019061008a91906108b0565b610154565b005b34801561009d57600080fd5b506100a66102ba565b6040516100b39190610954565b60405180910390f35b6100d660048036038101906100d19190610994565b6102bf565b005b6100e0610686565b005b6100ea6107b7565b005b3480156100f857600080fd5b50610113600480360381019061010e9190610a1f565b6107f2565b6040516101209190610a67565b60405180910390f35b34801561013557600080fd5b5061013e61084d565b60405161014b9190610a91565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101d9576040517f77cd32d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115610213576040517f0b407c6f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff168260405161023990610add565b60006040518083038185875af1925050503d8060008114610276576040519150601f19603f3d011682016040523d82523d6000602084013e61027b565b606091505b505090507fb6b476da71cea8275cac6b1720c04966afaff5e637472cedb6cbd32c43a23251826040516102ae9190610a91565b60405180910390a15050565b600090565b476002346102cd9190610b21565b1115610305576040517fa01e60eb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000034101561035f576040517fb315dd1700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610368336107f2565b1561039f576040517fab07e46400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339050600034905082600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083600181111561040b5761040a6108dd565b5b0217905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600061045d6102ba565b9050836001811115610472576104716108dd565b5b816001811115610485576104846108dd565b5b036105995760006002836104999190610b21565b905060008473ffffffffffffffffffffffffffffffffffffffff16826040516104c190610add565b60006040518083038185875af1925050503d80600081146104fe576040519150601f19603f3d011682016040523d82523d6000602084013e610503565b606091505b505090508061053e576040517fd7d1d7df00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff167f1070a358267b3c26271e1f9b8e8c4d095432b7e032a37c4b59f45685c7e36b8e8588868660405161058a9493929190610b63565b60405180910390a250506105ef565b8273ffffffffffffffffffffffffffffffffffffffff167f1070a358267b3c26271e1f9b8e8c4d095432b7e032a37c4b59f45685c7e36b8e83868460006040516105e69493929190610bed565b60405180910390a25b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009055600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff021916905550505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461070b576040517f77cd32d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600047905060003373ffffffffffffffffffffffffffffffffffffffff168260405161073690610add565b60006040518083038185875af1925050503d8060008114610773576040519150601f19603f3d011682016040523d82523d6000602084013e610778565b606091505b505090507fb6b476da71cea8275cac6b1720c04966afaff5e637472cedb6cbd32c43a23251826040516107ab9190610a91565b60405180910390a15050565b7f5af8184bef8e4b45eb9f6ed7734d04da38ced226495548f46e0c8ff8d7d9a52433346040516107e8929190610c41565b60405180910390a1565b6000806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411156108435760019050610848565b600090505b919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600080fd5b6000819050919050565b61088d8161087a565b811461089857600080fd5b50565b6000813590506108aa81610884565b92915050565b6000602082840312156108c6576108c5610875565b5b60006108d48482850161089b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061091d5761091c6108dd565b5b50565b600081905061092e8261090c565b919050565b600061093e82610920565b9050919050565b61094e81610933565b82525050565b60006020820190506109696000830184610945565b92915050565b6002811061097c57600080fd5b50565b60008135905061098e8161096f565b92915050565b6000602082840312156109aa576109a9610875565b5b60006109b88482850161097f565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109ec826109c1565b9050919050565b6109fc816109e1565b8114610a0757600080fd5b50565b600081359050610a19816109f3565b92915050565b600060208284031215610a3557610a34610875565b5b6000610a4384828501610a0a565b91505092915050565b60008115159050919050565b610a6181610a4c565b82525050565b6000602082019050610a7c6000830184610a58565b92915050565b610a8b8161087a565b82525050565b6000602082019050610aa66000830184610a82565b92915050565b600081905092915050565b50565b6000610ac7600083610aac565b9150610ad282610ab7565b600082019050919050565b6000610ae882610aba565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b2c8261087a565b9150610b378361087a565b9250828202610b458161087a565b91508282048414831517610b5c57610b5b610af2565b5b5092915050565b6000608082019050610b786000830187610a82565b610b856020830186610945565b610b926040830185610945565b610b9f6060830184610a82565b95945050505050565b6000819050919050565b6000819050919050565b6000610bd7610bd2610bcd84610ba8565b610bb2565b61087a565b9050919050565b610be781610bbc565b82525050565b6000608082019050610c026000830187610a82565b610c0f6020830186610945565b610c1c6040830185610945565b610c296060830184610bde565b95945050505050565b610c3b816109e1565b82525050565b6000604082019050610c566000830185610c32565b610c636020830184610a82565b939250505056fea26469706673582212202c55fb9304bd13d3411260bfe220c8da4aff2070aa5a572f740ce4eccd0401ce64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "isAddressInBalances(address)": {
        "details": "Check whether a player currently exists in the list of active balances"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 24,
        "contract": "contracts/Flippy.sol:Flippy",
        "label": "s_playersToBalances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 29,
        "contract": "contracts/Flippy.sol:Flippy",
        "label": "s_playersToCoinFaceSelection",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_enum(CoinFace)16)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_enum(CoinFace)16": {
        "encoding": "inplace",
        "label": "enum Flippy.CoinFace",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_enum(CoinFace)16)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => enum Flippy.CoinFace)",
        "numberOfBytes": "32",
        "value": "t_enum(CoinFace)16"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}